from+size分页中 from+size得到的和如果超过了一万的话效率会十分低下

from+size户查询的时候es的原理是:
1. 先将用户指定的关键字进行分词
2. 将分好的词库进行检索,得到多个文档的id
3. 去各个分片中拉取指定的数据                     慢
4. 将数据根据得分进行排序		也比较耗时
5. 根据from将获取的数据舍弃一部分
6. 返回结果


scroll深分页的查询方式:
1. 先将用户指定的关键字进行分词
2. 将分好的词库进行检索,得到多个文档的id(是有一定顺序的)
3. 将文档的id存放在es的上下文中(内存中)
4. 根据指定的size去es中检索指定的数据,拿完数据的文档id会从上下文中移除
5. 如果需要下一页的数据,直接去es的上下文中,找到后续的内容
6. 之后重复第四步和第五步直到上下文的数据全部拿空了为止

scroll的查询方式不适合做实时的查询,因为内容是在内存中找的,虽然效率变高了但是查询的数据不是最新的
后台管理什么的用scorll比较好

scroll排序的方式默认是按照id 我们额可以用sort进行指定排序方式